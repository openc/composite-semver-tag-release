name: Docker Build and Push

on:
  #push:
    #branches: [ master ]
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      #- name: Checkov 
      #  uses: bridgecrewio/checkov-action@v12.641.0
      #  with:
      #    directory: .
     
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_MGMT_ECR_ID }}
          aws-secret-access-key: ${{ secrets.AWS_MGMT_ECR_KEY }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
    
      - name: Build, tag container
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: message-bus
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }} .


      - name: Test container image with GOSS
        shell: bash
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: message-bus
          IMAGE_TAG: latest
        run: |
          curl -L https://github.com/aelsabbahy/goss/releases/latest/download/goss-linux-amd64 -o /usr/local/bin/goss
          chmod +rx /usr/local/bin/goss
          curl -L https://github.com/aelsabbahy/goss/releases/latest/download/dgoss -o /usr/local/bin/dgoss
          chmod +rx /usr/local/bin/dgoss
          #dgoss run -d -p 8083:80 --env-file aws.txt $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      #- name: Test container image with GOSS
      #  shell: bash
      #  env:
      #    ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #    ECR_REPOSITORY: message-bus
      #  run: |
      #    curl -L https://github.com/aelsabbahy/goss/releases/latest/download/goss-linux-amd64 -o /usr/local/bin/goss
      #    chmod +rx /usr/local/bin/goss
      #    curl -L https://github.com/aelsabbahy/goss/releases/latest/download/dgoss -o /usr/local/bin/dgoss
      #    chmod +rx /usr/local/bin/dgoss
      #    dgoss run -d -p 8083:80 --env-file aws.txt $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}

        
      - name: Push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: message-bus
          IMAGE_TAG: latest

        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
